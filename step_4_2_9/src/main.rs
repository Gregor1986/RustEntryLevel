// Семь раз отмерь один раз отрежь
// В программировании точность играет важную роль. Действительно, следить за точностью критически важно во многих
// областях. Рассмотрим, например, процесс изготовления инженерных деталей.
// Предположим, что производится изготовление важной детали для двигателя. Допустим, данная деталь должна иметь 
// диаметр 10.0 миллиметров с допустимым отклонением ±0.2 миллиметра. Это означает, что диаметр детали должен 
// находиться в диапазоне от 9.8 до 10.2 миллиметров.
// Если диаметр детали будет меньше 9.8 миллиметров, то это может привести к несовместимости с другими 
// компонентами двигателя или даже к потенциальному отказу в работе. Если диаметр детали превысит 10.2 
// миллиметра, это может вызвать трение или неполадки в работе двигателя, что также может представлять опасность 
// для безопасности.
// Таким образом, следить за точностью в процессе изготовления этой детали критически важно для обеспечения 
// безопасности и надежности эксплуатируемых систем. Это касается всех областей: медицинского оборудования, 
// производства лекарств, продуктов, удобрений и т.д.
// Теперь взглянем на задание. Напишите программу, которая считывает вещественное и целое (usize) число , 
// а затем выводит дробное число с точностью до числа знаков после запятой, указанного введённым целым числом.
//  Давайте проверим, насколько хорошо ваша программа справится с этой ответственной задачей!
use std::io;
fn main() {
    let mut input_string = String::new();
    io::stdin().read_line(&mut input_string).expect("Не удалось прочитать строку");
    let a = input_string.trim().parse::<f64>().expect("Это не число"); 
    let mut input_string_1 = String::new();
    io::stdin().read_line(&mut input_string_1).expect("Не удалось прочитать строку");
    let b = input_string_1.trim().parse::<usize>().expect("Это не число"); 
    println!("{:.b$}", a);
} 